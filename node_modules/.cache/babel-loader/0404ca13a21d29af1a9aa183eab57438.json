{"ast":null,"code":"var _jsxFileName = \"/home/pran_ker/Projects/Blog/src/BlogList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogList = _ref => {\n  let {\n    blogs\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Written by \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogList","blogs","map","blog","title","author","id"],"sources":["/home/pran_ker/Projects/Blog/src/BlogList.js"],"sourcesContent":["\nconst BlogList = ({ blogs }) => {\n  return (\n    <div className=\"blog-list\">\n      {blogs.map(blog => (\n        <div className=\"blog-preview\" key={blog.id} >\n          <h2>{ blog.title }</h2>\n          <p>Written by { blog.author }</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default BlogList;"],"mappings":";;;AACA,MAAMA,QAAQ,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAA,UAAMA,IAAI,CAACC;MAAX;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,0BAAgBD,IAAI,CAACE,MAArB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,GAAmCF,IAAI,CAACG,EAAxC;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAXD;;KAAMN,Q;AAaN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}